name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # 1) Lint + Tests + Coverage
  build-and-test:
    name: Build and Test (Lint + Coverage)
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt

      - name: Linting (flake8)
        run: |
          echo "Running flake8..."
          flake8 .

      - name: Run tests with coverage
        run: |
          echo "Running pytest with coverage..."
          coverage run -m pytest

      - name: Coverage report (fail if coverage < 80%)
        run: coverage report --fail-under=80

  # 2) Build and Push Docker Image
  containerise:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [build-and-test]

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/oc-lettings:latest
            ${{ secrets.DOCKER_USERNAME }}/oc-lettings:${{ github.sha }}

  # 3) Deploy to Render
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [containerise]

    steps:
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
